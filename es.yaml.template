apiVersion: v1
kind: Service
metadata:
  name: ${K8S_METADATA_NAME}
  namespace: ${K8S_METADATA_NAMESPACE}
  labels:
    app: ${K8S_METADATA_NAME}
spec:
  ports:
    - port: 9200
      protocol: TCP
  clusterIP: None
  selector:
    app: ${K8S_METADATA_NAME}
    elasticsearch-node-type: master
---
apiVersion: v1
kind: Service
metadata:
  name: ${K8S_METADATA_NAME}-master
  namespace: ${K8S_METADATA_NAMESPACE}
  labels:
    app: ${K8S_METADATA_NAME}
spec:
  ports:
    - port: 9300
      protocol: TCP
  clusterIP: None
  selector:
    app: ${K8S_METADATA_NAME}
    elasticsearch-node-type: master
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: ${K8S_METADATA_NAME}-master
  namespace: ${K8S_METADATA_NAMESPACE}
  labels:
    app: ${K8S_METADATA_NAME}
    elasticsearch-node-type: master
spec:
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: RollingUpdate
  serviceName: ${K8S_METADATA_NAME}-master
  replicas: ${K8S_SPEC_MASTER_REPLICAS}
  template:
    metadata:
      labels:
        app: ${K8S_METADATA_NAME}
        elasticsearch-node-type: master
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:5.5.2
          env:
            - name: ES_JAVA_OPTS
              value: "-Xms192m -Xmx192m"
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ES_CLUSTER_NAME
              value: ${K8S_METADATA_NAME}
            - name: ES_MASTER_SERVICE_NAME
              value: ${K8S_METADATA_NAME}-master
          resources:
            limits:
              cpu: 400m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          ports:
            - containerPort: 9300
              name: transport
          readinessProbe:
            tcpSocket:
              port: transport
            initialDelaySeconds: 30
            periodSeconds: 10
            failureThreshold: 10
            successThreshold: 1
          livenessProbe:
            tcpSocket:
              port: 9300
            initialDelaySeconds: 240
            periodSeconds: 30
            failureThreshold: 2
          command:
            - env
            - xpack.graph.enabled=false
            - xpack.ml.enabled=false
            - xpack.monitoring.enabled=false
            - xpack.security.enabled=false
            - xpack.watcher.enabled=false
            - cluster.name=${K8S_METADATA_NAME}
            - discovery.zen.ping.unicast.hosts=${K8S_METADATA_NAME}-master
            - discovery.zen.minimum_master_nodes=${LOCAL_MIN_MASTERS}
            - node.name=$(K8S_POD_NAME)
            - node.master=true
            - node.data=false
            - /bin/bash
            - bin/es-docker
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: ${K8S_METADATA_NAME}-data
  namespace: ${K8S_METADATA_NAMESPACE}
  labels:
    app: ${K8S_METADATA_NAME}
    elasticsearch-node-type: data
spec:
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: RollingUpdate
  serviceName: ${K8S_METADATA_NAME}-data
  replicas: ${K8S_SPEC_DATA_REPLICAS}
  template:
    metadata:
      labels:
        app: ${K8S_METADATA_NAME}
        elasticsearch-node-type: data
    spec:
      securityContext:
        fsGroup: 1000
      containers:
        - name: elasticsearch
          image: docker.elastic.co/elasticsearch/elasticsearch:5.5.2
          env:
            - name: ES_JAVA_OPTS
              value: "-Xms128m -Xmx128m"
            - name: K8S_POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: ES_CLUSTER_NAME
              value: telemetry-cluster
            - name: ES_MASTER_SERVICE_NAME
              value: elasticsearch-master
          resources:
            limits:
              cpu: 400m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          ports:
            - containerPort: 9300
              name: transport
              protocol: TCP
          readinessProbe:
            exec:
              command:
                - bash
                - "-c"
                - "set -eo pipefail && curl -fs localhost:9200/_cat/health?h=st | grep 'green'"
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 3
            successThreshold: 3
          livenessProbe:
            tcpSocket:
              port: transport
            initialDelaySeconds: 240
            periodSeconds: 30
            failureThreshold: 2
          volumeMounts:
            - name: data
              mountPath: /usr/share/elasticsearch/data
          command:
            - env
            - xpack.graph.enabled=false
            - xpack.ml.enabled=false
            - xpack.monitoring.enabled=false
            - xpack.security.enabled=false
            - xpack.watcher.enabled=false
            - cluster.name=${K8S_METADATA_NAME}
            - discovery.zen.ping.unicast.hosts=${K8S_METADATA_NAME}-master
            - discovery.zen.minimum_master_nodes=${LOCAL_MIN_MASTERS}
            - node.name=$(K8S_POD_NAME)
            - node.master=false
            - node.data=true
            - /bin/bash
            - bin/es-docker
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 100Mi
